/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: f7DE9y7qp46fyCw5nuY8f9

import * as React from "react";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: f7DE9y7qp46fyCw5nuY8f9/projectModule
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";
import { SupabaseUserGlobalContext } from "../../../index"; // plasmic-import: tNrCv3fe8u3Y/codeComponent
import { CommerceProviderComponent } from "@plasmicpkgs/commerce-shopify";
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css";
import { CmsCredentialsProvider } from "@plasmicpkgs/plasmic-cms";

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  antdConfigProviderProps?: Partial<
    Omit<React.ComponentProps<typeof AntdConfigProvider>, "children">
  >;

  supabaseUserGlobalContextProps?: Partial<
    Omit<React.ComponentProps<typeof SupabaseUserGlobalContext>, "children">
  >;

  commerceProviderComponentProps?: Partial<
    Omit<React.ComponentProps<typeof CommerceProviderComponent>, "children">
  >;

  embedCssProps?: Partial<
    Omit<React.ComponentProps<typeof EmbedCss>, "children">
  >;

  cmsCredentialsProviderProps?: Partial<
    Omit<React.ComponentProps<typeof CmsCredentialsProvider>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    antdConfigProviderProps,
    supabaseUserGlobalContextProps,
    commerceProviderComponentProps,
    embedCssProps,
    cmsCredentialsProviderProps
  } = props;

  return (
    <AntdConfigProvider
      {...antdConfigProviderProps}
      borderRadius={
        antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
          ? antdConfigProviderProps.borderRadius!
          : 6
      }
      colorBgBase={
        antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
          ? antdConfigProviderProps.colorBgBase!
          : "#FFFFFF"
      }
      colorError={
        antdConfigProviderProps && "colorError" in antdConfigProviderProps
          ? antdConfigProviderProps.colorError!
          : "#ff4d4f"
      }
      colorInfo={
        antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
          ? antdConfigProviderProps.colorInfo!
          : "#1677ff"
      }
      colorPrimary={
        antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
          ? antdConfigProviderProps.colorPrimary!
          : "#1677FF"
      }
      colorSuccess={
        antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
          ? antdConfigProviderProps.colorSuccess!
          : "#52c41a"
      }
      colorWarning={
        antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
          ? antdConfigProviderProps.colorWarning!
          : "#faad14"
      }
      controlHeight={
        antdConfigProviderProps && "controlHeight" in antdConfigProviderProps
          ? antdConfigProviderProps.controlHeight!
          : 32
      }
      defaultDark={
        antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
          ? antdConfigProviderProps.defaultDark!
          : false
      }
      lineWidth={
        antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
          ? antdConfigProviderProps.lineWidth!
          : 1
      }
      loadingText={
        antdConfigProviderProps && "loadingText" in antdConfigProviderProps
          ? antdConfigProviderProps.loadingText!
          : "Chargement..."
      }
      removeLoading={
        antdConfigProviderProps && "removeLoading" in antdConfigProviderProps
          ? antdConfigProviderProps.removeLoading!
          : false
      }
      sizeStep={
        antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeStep!
          : 4
      }
      sizeUnit={
        antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeUnit!
          : 4
      }
      themeStyles={
        antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
          ? antdConfigProviderProps.themeStyles!
          : true
          ? {
              fontFamily: "Inter",
              fontSize: "14px",
              fontWeight: "400",
              lineHeight: "1.5",
              color: "#535353",
              letterSpacing: "normal"
            }
          : undefined
      }
      wireframe={
        antdConfigProviderProps && "wireframe" in antdConfigProviderProps
          ? antdConfigProviderProps.wireframe!
          : false
      }
    >
      <SupabaseUserGlobalContext
        {...supabaseUserGlobalContextProps}
        defaultRedirectOnLoginSuccess={
          supabaseUserGlobalContextProps &&
          "defaultRedirectOnLoginSuccess" in supabaseUserGlobalContextProps
            ? supabaseUserGlobalContextProps.defaultRedirectOnLoginSuccess!
            : ``
        }
      >
        <CommerceProviderComponent
          {...commerceProviderComponentProps}
          accessToken={
            commerceProviderComponentProps &&
            "accessToken" in commerceProviderComponentProps
              ? commerceProviderComponentProps.accessToken!
              : "ef7d41c7bf7e1c214074d0d3047bcd7b"
          }
          storeDomain={
            commerceProviderComponentProps &&
            "storeDomain" in commerceProviderComponentProps
              ? commerceProviderComponentProps.storeDomain!
              : "next-js-store.myshopify.com"
          }
        >
          <EmbedCss
            {...embedCssProps}
            css={
              embedCssProps && "css" in embedCssProps
                ? embedCssProps.css!
                : ".no-scroll-bar {\n  -ms-overflow-style: none;  /* Internet Explorer 10+ */\n  scrollbar-width: none;\n  /* Firefox */\n}\n\n.no-scroll-bar::-webkit-scrollbar {\n  display: none;\n  /* Safari and Chrome */\n}\n\n\n\n\n/* CSS snippet */\n\n.stretch {\n  width: 100%;\n}\n\n.last-minute {\n  background: linear-gradient(180deg, #F6165B, #F36320); /* Rose \u2192 Orange (haut \u2192 bas) */\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  background-clip: text;\n  color: transparent;\n}\n\n.zero-charge {\n  color: #C8C8C8;\n}\n\ncharge {\n  color: #666666;\n}\n\n.grey-600 {\n  color: #666666;\n}\n\n.green-500 {\n  color: #BBFE68;\n}\n\n\n\n\n\n.crisp-client .cc-1brb6[data-full-view=true] .cc-1yy0g .cc-1m2mf {\n  bottom: 70px !important;\n  right: 14px !important;\n  z-index: 1 !important;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n/*animation*/\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.spinner {\n \n  animation: spin 0.6s linear infinite;\n  transform-origin: center;\n}\n\n\n\n\n\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.1);\n    opacity: 0.8;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n.pulse-animation {\n  animation: pulse 1.5s ease-in-out infinite;\n  display: inline-block;\n}\n\n\n.main-content {\n  width: calc(100% - 250px); /* reste de l'espace */\n  overflow: auto;\n}\n\n\n/*WEGLOT*/\n\n.wg-default, .wg-default .country-selector {\n      bottom: 70px !important;\n      left: 0 !important;\n}\n\n/* hide weglot*/\ndiv#weglot-switcher-1 {\n   display: none !important;\n}\n\n"
            }
          >
            <CmsCredentialsProvider
              {...cmsCredentialsProviderProps}
              databaseId={
                cmsCredentialsProviderProps &&
                "databaseId" in cmsCredentialsProviderProps
                  ? cmsCredentialsProviderProps.databaseId!
                  : undefined
              }
              databaseToken={
                cmsCredentialsProviderProps &&
                "databaseToken" in cmsCredentialsProviderProps
                  ? cmsCredentialsProviderProps.databaseToken!
                  : undefined
              }
              host={
                cmsCredentialsProviderProps &&
                "host" in cmsCredentialsProviderProps
                  ? cmsCredentialsProviderProps.host!
                  : "https://data.plasmic.app"
              }
              locale={
                cmsCredentialsProviderProps &&
                "locale" in cmsCredentialsProviderProps
                  ? cmsCredentialsProviderProps.locale!
                  : undefined
              }
            >
              {children}
            </CmsCredentialsProvider>
          </EmbedCss>
        </CommerceProviderComponent>
      </SupabaseUserGlobalContext>
    </AntdConfigProvider>
  );
}
